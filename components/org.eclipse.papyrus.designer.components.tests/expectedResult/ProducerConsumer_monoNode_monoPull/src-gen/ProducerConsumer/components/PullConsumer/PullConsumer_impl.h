// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#ifndef PRODUCERCONSUMER_COMPONENTS_PULLCONSUMER_PULLCONSUMER_IMPL_H
#define PRODUCERCONSUMER_COMPONENTS_PULLCONSUMER_PULLCONSUMER_IMPL_H

/************************************************************
 PullConsumer_impl class header
 ************************************************************/

#include "ProducerConsumer/components/PullConsumer/Pkg_PullConsumer.h"

#include "componentlib/StdPorts/Crun.h"
#include "sysinterfaces/IRunnable.h"

namespace ProducerConsumer {
namespace derivedTypes {
namespace ProducerConsumer {
namespace components {
namespace interfaces {
class PullConsumer_PubData;
}
}
}
}
}

namespace ProducerConsumer {
namespace components {
namespace PullConsumer {

/************************************************************/
/**
 * 
 */
class PullConsumer_impl: public ::sysinterfaces::IRunnable,
		public ::componentlib::StdPorts::Crun {
public:
	/**
	 * 
	 */
	::ProducerConsumer::derivedTypes::ProducerConsumer::components::interfaces::PullConsumer_PubData* p;

	/**
	 * 
	 */
	void run();

	/**
	 * 
	 * @return ret 
	 */
	::sysinterfaces::IRunnable* get_run();

	/**
	 * 
	 * @param ref 
	 */
	void connect_p(
			::ProducerConsumer::derivedTypes::ProducerConsumer::components::interfaces::PullConsumer_PubData* /*in*/ref);

	// opaque behavior without specification (typically from state machine)
	/**
	 * 
	 * 
	 */
	void
	configuration_complete();

};
/************************************************************/
/* External declarations (package visibility)               */
/************************************************************/

/* Inline functions                                         */

} // of namespace PullConsumer
} // of namespace components
} // of namespace ProducerConsumer

/************************************************************
 End of PullConsumer_impl class header
 ************************************************************/

#endif
