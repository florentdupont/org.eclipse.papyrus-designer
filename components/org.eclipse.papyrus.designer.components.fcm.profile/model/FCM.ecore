<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="FCM" nsURI="http://www.eclipse.org/papyrus/FCM/1" nsPrefix="FCM">
  <eClassifiers xsi:type="ecore:EClass" name="ImplementationGroup">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A group of interaction components should apply both stereotypes. Each member of such a group must be an interaction component, but this is not enforced by the meta-model"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        lowerBound="1" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Class"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CompToOOmapping">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="We assume that a model library defines a set of supported programming languages as well as a set of provided component to mappings. We do not use a fixed enumeration defined in the profile to assure extensibility"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        lowerBound="1" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Class"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CodeGenOptions">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="This information on a package tells the code generators which programming language and which component-to-OO mapping should be used"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Package" ordered="false"
        lowerBound="1" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Package"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="compToOOmapping" ordered="false"
        lowerBound="1" eType="#//CompToOOmapping"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InteractionComponent">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An interaction component is responsible for realization the communication between two components. It typically owns conjugated ports. It might be defined within a package template to enable the adaption of ports to those used by the interacting components"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="forDistribution" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean"
        defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="connectionPattern" ordered="false"
        unique="false" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Collaboration"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        lowerBound="1" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Class"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Singleton">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Indicate that this component is instantiated only once within the system. It also implies that this component is automatically instantiated by a generated bootloader"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        lowerBound="1" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Class"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Connector" eSuperTypes="#//ConfigurableElementInstance">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="This stereotype references the interaction component that should realize the communication. It can be applied to UML connectors as well as to properties. The former is used, if there are two communication partners, the latter is more flexible. For instance, in case of a DDS interaction, a publisher does not know the consumers, it therefore communicates with a part (property) representing the publisher part of the interaction component"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Connector" ordered="false"
        unique="false" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Connector"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ic" ordered="false" unique="false"
        eType="#//InteractionComponent"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Property" ordered="false"
        unique="false" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Property"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConfigurableElementInstance" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="configuration" ordered="false"
        unique="false" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//InstanceSpecification"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="UseInstanceConfigurator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Use a dedicated component that that is responsible for configuring component instances. The concept is primarily intented for container extensions. For instance, a container extension might provide reflection data about a component. In this case, the instance configuration would create the value specifications using data available in the model"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        lowerBound="1" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Class"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="configurator" ordered="false"
        lowerBound="1" eType="#//InstanceConfigurator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InstanceConfigurator">
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        lowerBound="1" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Class"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="onNodeModel" ordered="false"
        eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RuleApplication">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Apply a set of container rules. It can be applied to a single class or to a package, implying that all components within the package apply the specified rule."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        unique="false" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Class"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="containerRule" ordered="false"
        unique="false" upperBound="-1" eType="#//ContainerRule"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Package" ordered="false"
        eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Package"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ContainerRule">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A container rule, i.e. a specification of extension or interception within a container. Beside the two options, a container rule is basically a composite class whose parts are added to the container."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Class"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" ordered="false" lowerBound="1"
        eType="#//ContainerRuleKind"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="ContainerRuleKind">
    <eLiterals name="ComponentRule"/>
    <eLiterals name="LightWeightOORule" value="1"/>
    <eLiterals name="CustomTransformation" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TemplatePort" eSuperTypes="#//Port">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Template ports are ports that enable the binding of an extended port with an actual parameter: the resulting port kind is the port kind bound to the current port type.&#xA;For instance, we cound type a port with &quot;MyType&quot; and use an extended port Writer with a template with formal parameter T. Resulting port would be Writer with T bound to MyType."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="boundType" ordered="false"
        eType="#//PortKind" volatile="true" transient="true" unsettable="true" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Port" eSuperTypes="#//ConfigurableElementInstance">
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Port" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Port"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="kind" ordered="false" unique="false"
        eType="#//PortKind"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" ordered="false" lowerBound="1"
        eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Type"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PortKind">
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Class"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="providedInterface" ordered="false"
        unique="false" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Interface"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="requiredInterface" ordered="false"
        unique="false" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Interface"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="extendedPort" ordered="false"
        lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//Boolean"
        changeable="false" volatile="true" transient="true" unsettable="true" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="InterceptionKind">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Condition whether an interceptor should be used within a container.&#xA;- &quot;Some&quot; = set of ports defined in interception rule&#xA;- &quot;AllOut/AllIn&quot; = ports with required/provided ports only&#xA;- &quot;Matching&quot; = kind of interceptor and component port need to match&#xA;"/>
    </eAnnotations>
    <eLiterals name="InterceptSome"/>
    <eLiterals name="InterceptAll" value="1"/>
    <eLiterals name="InterceptAllOut" value="2"/>
    <eLiterals name="InterceptAllIn" value="3"/>
    <eLiterals name="InterceptMatching" value="4"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CompImplTemplate">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="templateDefs" ordered="false"
        unique="false" eType="ecore:EDataType platform:/plugin/org.eclipse.uml2.types/model/Types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Class"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InterceptionRule">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="interceptionKind" ordered="false"
        unique="false" lowerBound="1" eType="#//InterceptionKind"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="interceptionSet" ordered="false"
        unique="false" upperBound="-1" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Feature"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Property" ordered="false"
        lowerBound="1" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Property"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Operation" ordered="false"
        lowerBound="1" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Operation"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Fragment">
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        lowerBound="1" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Class"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Assembly">
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        lowerBound="1" eType="ecore:EClass platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#//Class"/>
  </eClassifiers>
</ecore:EPackage>
