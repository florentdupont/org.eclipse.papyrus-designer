<?xml version="1.0" encoding="UTF-8"?>
<compositeCheatsheet name="Create an component-based MARTE model supported by Papyrus designer">
   <taskGroup kind="sequence" name="Create your model" skip="false">
      <intro>
         <b>Introduction</b>
	This guide will walk you though the process of creating a component-based MARTE model supported by Papyrus designer
	and generate the code related to your model.
	You will create an empty model and build it gradually to finally generate the related code.
	If you need help at any step, click the (?) to the right. Let&apos;s get started!
      </intro>
      <taskGroup kind="choice" name="Step1: Create a new model" skip="true">
         <intro>
            Either create a new SW Designer model or start with a working example
         </intro>
         <task kind="cheatsheet" name="Step1a: Create a new model" skip="true">
            <param name="path" value="MarteNewModel.xml">
            </param>
         </task>
         <task kind="cheatsheet" name="Step1b: Start with a working example" skip="true">
            <param name="path" value="OpenExample.xml">
            </param>
         </task>
      </taskGroup>
      <task kind="cheatsheet" name="Step2: Model the application components" skip="true">
         <param name="path" value="MarteAddComponents.xml">
         </param>
      </task>
      <task kind="cheatsheet" name="Step3: Add ports" skip="true">
         <param name="path" value="MarteAddPorts.xml">
         </param>
      </task>
      <task kind="cheatsheet" name="Step3b: Review standard FCM port definition (Start and LifeCycle)" skip="true">
         <param name="path" value="AddPorts.xml">
         </param>
      </task>
      <task kind="cheatsheet" name="Step4: Component implementation (not MARTE specific)" skip="true">
         <onCompletion>
            <b>Conclusion</b>
		You have now created a MARTE component which has at the same time FCM annotations. You can now
		proceed with implementation and deployment as for a standard FCM component
         </onCompletion>
         <param name="path" value="ComponentImplementation.xml">
         </param>
      </task>
      <task kind="cheatsheet" name="Step5: continue with platform modeling" skip="true">
         <onCompletion>
            <b>Conclusion</b><br/>
		You have now created a MARTE component which has at the same time FCM annotations. You can now
		proceed with implementation and deployment as for a standard FCM component
         </onCompletion>
         <param name="path" value="PlatformModel.xml">
         </param>
      </task>
      <task kind="cheatsheet" name="Step6: Validate the model" skip="false">
         <param name="path" value="Validation.xml">
         </param>
      </task>
      <task kind="cheatsheet" name="Step7: Generate the deployment plan of the system" skip="true">
         <param name="path" value="DeploymentPlan.xml">
         </param>
      </task>
      <task kind="cheatsheet" name="Step8: Code generation" skip="true">
         <onCompletion>
            <b>Conclusion</b><br/>
		You have now a project, a model and source code for each target.
         </onCompletion>
         <param name="path" value="CodeGeneration.xml">
         </param>
      </task>
      <task kind="cheatsheet" name="Step9: Code compilation" skip="true">
         <onCompletion>
            <b>Conclusion</b><br/>
		You have now a binary per target which is ready for deployment. The actual transfer
		to the target is out of SW Designer&apos;s scope.
         </onCompletion>
         <param name="path" value="CodeCompilation.xml">
         </param>
      </task>
   </taskGroup>
</compositeCheatsheet>
