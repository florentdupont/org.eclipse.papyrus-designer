// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#ifndef COMPONENTLIB_CONTAINERSERVICES_THREAD_H
#define COMPONENTLIB_CONTAINERSERVICES_THREAD_H

/************************************************************
 Thread class header
 ************************************************************/

#include "componentlib/ContainerServices/Pkg_ContainerServices.h"

#include "AnsiCLibrary/Pkg_AnsiCLibrary.h"
#include "PrimitiveTypes/Pkg_PrimitiveTypes.h"
#include "componentlib/ContainerServices/LifeCycle.h"
#include "sysinterfaces/ILifeCycle.h"

namespace sysinterfaces {
class IRunnable;
}

namespace componentlib {
namespace ContainerServices {

/************************************************************/
/**
 * Priority of the thread. The interpretation of the value is OS specific. In case of POSIX; priorities are only taken into account for threads with a FIFO and round-robin scheduliung policy.
 */
class Thread: public ::sysinterfaces::ILifeCycle, public LifeCycle {
public:
	/**
	 * 
	 */
	::PrimitiveTypes::Integer priority;
	/**
	 * 
	 */
	::sysinterfaces::IRunnable* rRun;

	/**
	 * 
	 * @param arg 
	 * @return ret 
	 */
	static void* staticAct(void* /*in*/arg);

	/**
	 * 
	 */
	void activate();

	/**
	 * 
	 */
	void configuration_complete();

	/**
	 * 
	 */
	void deactivate();

	/**
	 * 
	 * @return ret 
	 */
	::sysinterfaces::ILifeCycle* get_lc();

	/**
	 * 
	 * @param ref 
	 */
	void connect_rRun(::sysinterfaces::IRunnable* /*in*/ref);

};
/************************************************************/
/* External declarations (package visibility)               */
/************************************************************/

/* Inline functions                                         */

} // of namespace ContainerServices
} // of namespace componentlib

/************************************************************
 End of Thread class header
 ************************************************************/

#endif
